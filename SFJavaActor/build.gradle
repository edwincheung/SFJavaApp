apply plugin: 'java'
apply plugin: 'eclipse'

sourceSets {
  main {
     java.srcDirs = ['src']
     output.classesDir = 'out/classes'
      resources {
       srcDirs = ['src']
     }
   }
}

clean.doFirst {
    delete "${projectDir}/lib"
    delete "${projectDir}/out"
    delete "${projectDir}/../SFJavaApp/SFJavaActorPkg/Code/lib"
    delete "${projectDir}/../SFJavaApp/SFJavaActorPkg/Code/sfjavaactor.jar"
}

repositories {
    mavenCentral()
}

configurations {
    azuresf
}

dependencies {
    compile project(':SFJavaActorInterface')
    azuresf ('com.microsoft.servicefabric:sf-actors:1.0.0-preview1')
    compile fileTree(dir: 'lib', include: '*.jar')
}

task explodeDeps(type: Copy, dependsOn:configurations.azuresf) { task ->
    configurations.azuresf.filter { it.toString().contains("native") }.each{
        from zipTree(it)
    }
    configurations.azuresf.filter { !it.toString().contains("native") }.each {
        from it
    }
    into "lib"
    include "lib*.so", "*.jar"
}

compileJava.dependsOn(explodeDeps)

jar {
    manifest {
        def mpath = configurations.compile.collect {'lib/'+it.getName()}.join (' ')
        mpath = mpath + ' ' + configurations.azuresf.collect {'lib/'+it.getName()}.join (' ')
    attributes(
                'Main-Class': 'reliableactor.SFJavaActorHost',
                "Class-Path": mpath)
    baseName "sfjavaactor"
    destinationDir = file('../SFJavaApp/SFJavaActorPkg/Code')}
 }

 task copyDeps<< {
	copy {
		from("lib/")
		into("../SFJavaApp/SFJavaActorPkg/Code/lib")
		include('*')
	}
	copy {
		from("../SFJavaActorInterface/out/lib")
		into("../SFJavaApp/SFJavaActorPkg/Code/lib")
		include('*.jar')
	}
}


defaultTasks 'clean', 'jar', 'copyDeps'
